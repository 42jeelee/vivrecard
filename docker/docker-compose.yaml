x-common-timezone: &korea-timezone
  environment:
    - TZ=Asia/Seoul
  volumes:
    - /etc/localtime:/etc/localtime:ro

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    depends_on:
      - app
      - frontend
    networks:
      - frontend-network
    <<: *korea-timezone

  frontend:
    build:
      context: ../vivrecard
      dockerfile: Dockerfile
    container_name: kiwee-frontend
    expose:
      - "80"
    depends_on:
      - app
    networks:
      - frontend-network
    <<: *korea-timezone

  app:
    build:
      context: ../kiwee
      dockerfile: Dockerfile
    container_name: kiwee-app
    expose:
      - "8080"
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      REDIS_HOST: ${REDIS_HOST}
      DB_HOST: db
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID}
      DISCORD_CLIENT_SECRET: ${DISCORD_CLIENT_SECRET}
      FRONTEND_BASE_URL: ${FRONTEND_BASE_URL}
      TZ: Asia/Seoul
      JAVA_TOOL_OPTIONS: "-Duser.timezone=Asia/Seoul"
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    networks:
      - frontend-network
      - backend-network
    <<: *korea-timezone

  redis:
    image: redis:7
    container_name: kiwee-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-network
    <<: *korea-timezone

  db:
    image: postgres:15
    container_name: kiwee-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    command: ["postgres", "-c", "timezone=Asia/Seoul"]
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-network
    <<: *korea-timezone

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  redis_data:
  db_data:

networks:
  frontend-network:
  backend-network:
